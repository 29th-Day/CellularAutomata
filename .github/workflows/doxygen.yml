# Simple workflow for deploying static content to GitHub Pages
name: Deploy doxygen to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - CellularAutomata/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository
        uses: actions/checkout@v3
      - name: Install doxygen
        run: sudo apt-get install -y doxygen
      - name: Download doxygen-awesome
        run: git clone https://github.com/jothepro/doxygen-awesome-css.git
      - name: Create modified header 1
        run: doxygen -w html doxygen_awesome_header.html not_used.html not_used.css
      - name: Create modified header 2
        run: sed -i '/<\/head>/i <script type="text/javascript" src="$relpath^doxygen-awesome-darkmode-toggle.js"></script><script type="text/javascript" src="$relpath^doxygen-awesome-fragment-copy-button.js"></script><script type="text/javascript" src="$relpath^doxygen-awesome-paragraph-link.js"></script><script type="text/javascript" src="$relpath^doxygen-awesome-interactive-toc.js"></script><script type="text/javascript">DoxygenAwesomeDarkModeToggle.init();DoxygenAwesomeFragmentCopyButton.init();DoxygenAwesomeParagraphLink.init();DoxygenAwesomeInteractiveToc.init();</script>' doxygen_awesome_header.html
      - name: Build docs
        run: doxygen .doxygen
      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: ./docs
      
  deploy:
    needs:
      - build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Load artifact
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: ./docs
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './docs/html'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
